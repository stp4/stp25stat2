% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tbll_effect.R
\name{Tbll_effect}
\alias{Tbll_effect}
\title{Effect Displays}
\usage{
Tbll_effect(
  x,
  term = NULL,
  ...,
  include.se = FALSE,
  include.ci = TRUE,
  include.n = FALSE,
  digits = 2
)
}
\arguments{
\item{x}{fit  und effecte x = mod    (a regression model objec)  term    (the quoted name of a term)}

\item{...}{param an effect transformation = list(link = log, inverse = exp)}

\item{include.se, include.ci, include.n, digits}{an Output}
}
\value{
data.frame ore  list with data.frame
}
\description{
Workaraund fuer effect {effects}. Dei Funktion erlaubt formulas und kann  ~a*b
 sowie ~b*a evaluieren.
}
\examples{

\donttest{
require(effects)

mod <- lm(prestige ~ type * (education + income) + women, Prestige)
Tbll_effect(mod, ~ type * education + women)

DF <- data.frame(
  y=c(12, 15, 23, 44, 11, 44, 49, 27, 25,  8,
      11, 10, 28, 15, 34, 20, 31, 55, 15, 34,
      47, 11, 27,  9, 12, 15,  7, 15, 42, 14,
      19, 24, 20, 10, 38, 28, 36,  9, 31),
  iq =c(91,  95, 103, 116,  88, 116, 118, 106, 105,  82,
        88,  87, 107,  95, 111, 100, 109, 120,  95, 111,
        117,  88, 106,  85,  91,  95,  81,  95, 115,  94,
        99, 104, 100,  87, 113, 107, 112,  84, 109 )
)
DF$log.y =  log(DF$y)


(fit.linear <- lm(y ~ iq, DF))
(fit.log.y <- lm(log.y ~ iq, DF))
(fit.model.log<- lm(log(y)~iq, DF))

p1 <-
  plot(effect("iq", fit.linear ,
              partial.residuals = TRUE),
       main = "y (linear)")

p2 <-
  plot(effect("iq", fit.log.y,
              partial.residuals = TRUE),
       main = "log")

p3 <- plot(effect("iq",  fit.log.y,
                  partial.residuals = TRUE,
                  transformation =  list(link =  log,  inverse = exp)),
           main = "log + trans")

p4 <- plot(effect("iq", fit.model.log ,
                  partial.residuals = TRUE),
           main = "log(y)")

p5 <-   plot(effect("iq", fit.model.log ,
                    partial.residuals = TRUE,
                    transformation =  list(link =  log,  inverse = exp)),
             main = "log(y) + trans")

require(cowplot)
plot_grid(p1,p4, p5,  p2, p3, ncol = 3)

cbind(
  Tbll(effect("iq", fit.linear), include.ci=FALSE),
  log.y=Tbll(effect("iq", fit.log.y), include.ci=FALSE)[[2]],
  log.y.trans= Tbll(effect("iq", fit.log.y,
                           transformation = list(link = log, inverse = exp)),
                           include.ci=FALSE)[[2]],
  model.log=Tbll(effect("iq", fit.model.log), include.ci=FALSE)[[2]],
  model.log.trans= Tbll(effect("iq", fit.model.log,
                               transformation =  list(link = log, inverse = exp)),
                               include.ci=FALSE)[[2]]
)

}

}
