% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract-lda.R, R/extract.R, R/extract_gof.R,
%   R/extract_manova.R, R/extract_mediate.R, R/extract_meta.R,
%   R/extract_param.R, R/extract_residuals.R
\name{tbll_extract.lda}
\alias{tbll_extract.lda}
\alias{extract}
\alias{tbll_extract}
\alias{tbll_extract.default}
\alias{tbll_extract.anova}
\alias{tbll_extract.data.frame}
\alias{tbll_extract.lm}
\alias{tbll_extract.aov}
\alias{tbll_extract.TukeyHSD}
\alias{tbll_extract.aovlist}
\alias{tbll_extract.summary.aov}
\alias{tbll_extract.step}
\alias{tbll_extract.table}
\alias{tbll_extract.summary.table}
\alias{tbll_extract.htest}
\alias{tbll_extract.pairwise.htest}
\alias{tbll_extract.likert}
\alias{tbll_extract.matchit}
\alias{tbll_extract.summary.matchit}
\alias{tbll_extract.principal}
\alias{tbll_extract.confusionMatrix}
\alias{tbll_extract.epi.tests}
\alias{tbll_extract.roc}
\alias{tbll_extract.assocstats}
\alias{tbll_extract.list}
\alias{tbll_extract.loglm}
\alias{extract_gof}
\alias{extract.manova}
\alias{tbll_extract.mediate}
\alias{tbll_extract.summary.mediate}
\alias{tbll_extract.meta}
\alias{extract_param}
\alias{extract_param_aov}
\alias{extract_effsize}
\alias{extract_etaSqr}
\alias{extract_partial_residuals}
\title{Extract}
\usage{
\method{tbll_extract}{lda}(
  x,
  fit_predict = MASS:::predict.lda(x),
  newdata = model.frame(x),
  digits = 3,
  ...
)

tbll_extract(...)

\method{tbll_extract}{default}(x, ...)

\method{tbll_extract}{anova}(x, include.eta = TRUE, ...)

\method{tbll_extract}{data.frame}(x, ...)

\method{tbll_extract}{lm}(...)

\method{tbll_extract}{aov}(...)

\method{tbll_extract}{TukeyHSD}(x, digits = 2, ...)

\method{tbll_extract}{aovlist}(x, ...)

\method{tbll_extract}{summary.aov}(x, ...)

\method{tbll_extract}{step}(x, include.se = FALSE, include.df = FALSE, ...)

\method{tbll_extract}{table}(...)

\method{tbll_extract}{summary.table}(x, ...)

\method{tbll_extract}{table}(...)

\method{tbll_extract}{htest}(x, ...)

\method{tbll_extract}{pairwise.htest}(x, caption = paste(x$data.name, x$method), ...)

\method{tbll_extract}{likert}(...)

\method{tbll_extract}{matchit}(x, ...)

\method{tbll_extract}{summary.matchit}(x, digits = 3, ...)

\method{tbll_extract}{principal}(x, ...)

\method{tbll_extract}{confusionMatrix}(x, digits = 2, Positive_Class = x$positiv, ...)

\method{tbll_extract}{epi.tests}(
  x,
  type = c(se = "Sensitivity", sp = "Specificity", pv.pos = "Positive predictive value",
    pv.neg = "Negative predictive value", p.tpdn = "False T+ proportion for true D-",
    p.tndp = "False T- proportion for true D+", p.dntp = "False T+ proportion for T+",
    p.dptn = "False T- proportion for T-", diag.ac = "Correctly classified proportion"),
  digits = 2
)

\method{tbll_extract}{roc}(
  x,
  digits = 2,
  type = c(threshold = "Threshold value", specificity = "Specificity", sensitivity =
    "Sensitivity", accuracy = "Accuracy", tpr = "True Positive Rate", fpr =
    "False Positive Rate", tnr = "True Negative Rate", fnr = "False Negative Rate", fdr =
    "False Discovery Rate")
)

\method{tbll_extract}{assocstats}(x, ...)

\method{tbll_extract}{list}(x, ...)

\method{tbll_extract}{loglm}(x, include.ll.ratio = TRUE, include.pearson = TRUE, ...)

extract_gof(
  x,
  include.ftest = TRUE,
  include.loglik = FALSE,
  include.minus.LL = include.loglik,
  include.r = FALSE,
  include.heteroskedasticity = TRUE,
  include.durbin = TRUE,
  include.levene = FALSE,
  include.bartlett = FALSE,
  include.vif = FALSE,
  include.sigma = FALSE,
  include.rmse = FALSE,
  include.aic = TRUE,
  include.bic = TRUE,
  include.residual = TRUE,
  include.normality = FALSE,
  include.multicollin = include.vif,
  include.deviance = TRUE,
  ...
)

extract.manova(
  x,
  test = "Wilks",
  caption = "MANOVA",
  note = "",
  include.eta = FALSE,
  ...
)

\method{tbll_extract}{mediate}(x, ...)

\method{tbll_extract}{summary.mediate}(x, caption = "", note = "", digits = 2, ...)

\method{tbll_extract}{meta}(
  x,
  digits = 2,
  include.I2 = TRUE,
  include.Q = TRUE,
  include.tau = TRUE,
  include.H = TRUE,
  ...
)

extract_param(
  x,
  include.b = TRUE,
  include.se = TRUE,
  include.beta = FALSE,
  include.ci = FALSE,
  include.odds = FALSE,
  include.odds.ci = if (include.odds & include.ci) TRUE else FALSE,
  include.statistic = TRUE,
  include.p = TRUE,
  include.stars = FALSE,
  include.df = FALSE,
  include.effects = c("ran_pars", "fixed"),
  include.eta = TRUE,
  include.sumsq = TRUE,
  include.meansq = FALSE,
  include.omega = FALSE,
  include.power = FALSE,
  conf.int = TRUE,
  conf.level = 0.95,
  conf.method = "Wald",
  fix_format = FALSE,
  digits.param = 3,
  digits.odds = 2,
  digits.test = 2,
  digits.beta = 2,
  format = "fg",
  conf.style.1 = FALSE,
  ...
)

extract_param_aov(
  x,
  include.eta = FALSE,
  include.sumsq = TRUE,
  include.meansq = FALSE,
  include.omega = FALSE,
  include.power = FALSE,
  fix_format = FALSE,
  ...
)

extract_effsize(x, ...)

extract_etaSqr(x, type = 2, anova = FALSE, ...)

extract_partial_residuals(x, ...)
}
\arguments{
\item{x}{Objekt oder Formel}

\item{fit_predict}{an MASS predict.lda}

\item{newdata}{model.frame(x)}

\item{digits}{in extract.matchit}

\item{...}{weitere Optionen}

\item{include.eta}{die Manova wird ueber heplots::etasq berechnet und die anova mit den SS eta2=SS/SS_total}

\item{include.se, include.df}{in extract.step}

\item{caption, note}{Ueberschrift}

\item{include.ll.ratio, include.pearson}{in extract.loglm}

\item{include.ftest, include.vif, include.heteroskedasticity, include.durbin, include.levene, include.bartlett}{GOF for lm}

\item{include.loglik, include.deviance, include.minus.LL}{GOF for glm}

\item{include.r, include.sigma, include.rmse, include.aic, include.bic, include.residual, include.normality, include.multicollin}{GOF for lm and glm}

\item{include.b, include.beta, include.ci, include.se, include.odds, include.odds.ci, include.statistic, include.p, include.stars, include.df, include.effects, conf.level, conf.method}{Parameter fuer die Regress-Tabellen}

\item{term}{effects: x-var}

\item{response}{effects: y-var}
}
\value{
data.frame

data.frame

data.frame
}
\description{
Turn an object into a tidy table

MANOVA: extract.manova(x, , test="Wilks") test : "Wilks", "Pillai"

Causal Mediation Analysis:
 stolen from mediate {mediation} and psych {mediate}

tbll_extract.summary.mediate: extract Output from mediate:::summary.mediate

tbll_extract.meta: Ausgabe von print.meta als tabelle

effects:   Extract partial effects obtained with allEffects()
}
\examples{

#' Linear Discriminant Analysis

 require(MASS)
#DF2 <- stp25aggregate::GetData(
  #"C:/Users/wpete/Dropbox/3_Forschung/R-Project/stp25data/extdata/discrim.sav")
#--https://stats.idre.ucla.edu/spss/dae/discriminant-function-analysis/
# DF2$Job <- factor(DF2$JOB, 1:3, Cs("customer service", "mechanic","dispatcher"))
#DF2$Job2 <- factor(DF2$JOB, c(2,3,1), Cs( "mechanic","dispatcher","customer service"))
#
#fit2 <- lda(Job ~ OUTDOOR+SOCIAL+CONSERVATIVE, data=DF2)
#fit3 <- lda(Job2 ~ OUTDOOR+SOCIAL+CONSERVATIVE, data=DF2)
#
#tbll_extract.lda(fit2)
#tbll_extract.lda(fit3)



summary(lm1 <- lm(Fertility ~ ., data = swiss))
slm1 <- stats::step(lm1)
tbll_extract(slm1)
# require(lmerTest)
 #m <- lmerTest::lmer(
 # Informed.liking ~ Product * Information * Gender +
#  (1 | Consumer) + (1 | Product:Consumer),
#  data = ham
# )
# elimination of non-significant effects
# s <- lmerTest::step(m)

# tbll_extract(s)


a <- letters[1:3]
tbll_extract(summary(table(a, sample(a))))


attach(airquality)
Month <- factor(Month, labels = month.abb[5:9])

## These give warnings because of ties :
tbll_extract(pairwise.wilcox.test(Ozone, Month))


# Sensitivität: richtig positive Rate eines Tests
#Spezifität: richtig-negative Rate eines Tests

  tab<-matrix(c(94,40,39,40), ncol=2, byrow = TRUE)
    tbll_extract( epiR::epi.tests(tab) )

require(vcd)
data("Arthritis")
tab <- xtabs(~Improved + Treatment, data = Arthritis)
tbll_extract(assocstats(tab))


require(MASS)
minn38a <- xtabs(f ~ ., minn38)
fm <- loglm(~ 1 + 2 + 3 + 4, minn38a)  # numerals as names.
#deviance(fm)
#fm
tbll_extract(fm)


#- manova ---------------------------------------------

## Set orthogonal contrasts.
op <- options(contrasts = c("contr.helmert", "contr.poly"))
## Fake a 2nd response variable
npk2 <- within(npk, foo <- rnorm(24))
npk2 <- within(npk2, foo2 <- rnorm(24))
npk2.aov <- manova(cbind(yield, foo, foo2) ~ block + N * P * K, npk2)

extract.manova(npk2.aov) #wilks
extract.manova(npk2.aov, "Pillai")

#npk2.aovE <- manova(cbind(yield, foo) ~  N*P*K + Error(block), npk2)
#extract.manova(npk2.aovE)



 DF<- get_data(
"C:/Users/wpete/Dropbox/3_Forschung/R-Project/stp25data/extdata/manova.sav"
)

#information from
DF$GROUP<- factor(DF$GROUP, 1:3, Cs("website", "nurse ", "video tape" ))
#DF \%>\% Tabelle2(USEFUL, DIFFICULTY, IMPORTANCE, by=~GROUP )

z<- as.matrix(DF[,-1])
fit1<- manova(z ~ DF$GROUP)
extract.manova(fit1)
summary(fit1)$Eigenvalues

# SPSS
# Multivariate Tests of Significance (S = 2, M = 0, N = 13 )
#
# Test Name       Value  Approx. F Hypoth. DF   Error DF  Sig. of F
#
# Pillais          .48    3.02       6.00      58.00       .012
# Hotellings       .90    4.03       6.00      54.00       .002
# Wilks            .53    3.53       6.00      56.00       .005
# Roys             .47
# Note.. F statistic for WILKS' Lambda is exact.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Univariate F-tests with (2,30) D. F.
#
# Variable   Hypoth. SS   Error SS Hypoth. MS   Error MS          F  Sig. of F
#
# USEFUL       52.92424  293.96544   26.46212    9.79885    2.70053       .083
# DIFFICUL      3.97515  126.28728    1.98758    4.20958     .47216       .628
# IMPORTAN     81.82969  426.37090   40.91485   14.21236    2.87882       .072
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#   Eigenvalues and Canonical Correlations
#
# Root No.    Eigenvalue        Pct.   Cum. Pct.  Canon Cor.
#
# 1          .892      99.416      99.416        .687
# 2          .005        .584     100.000        .072
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -




1+1



# library(meta)
data(Olkin1995)
head(Olkin1995)
m1 <- metabin(ev.exp, n.exp, ev.cont, n.cont,
              data = Olkin1995, subset = c(41, 47, 51, 59),
              studlab = paste(author, year),
              method = "Inverse")
print(m1, digits = 1, digits.Q = 1)
Tbll(m1)

fit <- lm(Sepal.Width ~ Petal.Length + Petal.Width, iris)
#broom::tidy(fit)
#broom::glance(fit)
#summary(fit)
extract_param(fit)



# Pearson's r correlation Small 0.2,  Medium 0.5, Large 0.8
# r2 coefficient of determination Small 0.04, Medium 0.25, Large 0.64
#
#  Quelle: http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3444174/pdf/i1949-8357-4-3-279.pdf
#
# Gestolen von https://cran.r-project.org/web/packages/effsize/effsize.pdf


# etaSquared

fit1<-lm(y1~x1, anscombe)

# extract_etaSqr(aov (y1~x1, anscombe), anova=TRUE)
# extract_etaSqr(fit1, anova=TRUE)
extract_etaSqr(fit1)



mod <- lm(log(prestige) ~ income:type + education, data=Prestige)
eff = effect("education", mod, partial.residuals=T)

dat<- extract_partial_residuals(eff)


# library(ggplot2)
# library(gridExtra)

# https://stackoverflow.com/questions/43950459/use-ggplot-to-plot-partial-effects-obtained-with-effects-library

 # g <- ggplot(dat$fit, aes(x = education, y = fit)) +
 # theme_bw() +
 # geom_line(size = 1) +
 # geom_point(data = dat$residuals, aes(x = education , y =  partial.residuals), shape = 1, col = "blue", size = 2) +
 # geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
#  geom_smooth(data =  dat$residuals, aes(x = education, y =  partial.residuals),   method = "loess", span = 2/3, linetype = "dashed", se = FALSE)

}
