% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fix_format.R, R/render.R, R/rndr_percent.R
\name{fix_format}
\alias{fix_format}
\alias{render_f}
\alias{render_f.list}
\alias{render_f.matrix}
\alias{render_f.data.frame}
\alias{render_f.tbl_df}
\alias{render_f.numeric}
\alias{render_f.default}
\alias{rndr_percent}
\title{Format a vector of provided numeric values}
\usage{
fix_format(
  x,
  digits = NULL,
  names_repair = TRUE,
  include.rownames = TRUE,
  p.value = c("Pr\\\\(\\\\>", "p value", "p.value", "pvalue"),
  se = c("Std\\\\. Error", "est.std"),
  df = c("N", "Df")
)

render_f(x, digits = NULL, ...)

\method{render_f}{list}(x, digits = NULL, ...)

\method{render_f}{matrix}(x, digits = NULL, ...)

\method{render_f}{data.frame}(x, digits = NULL, ...)

\method{render_f}{tbl_df}(x, digits = NULL, ...)

\method{render_f}{numeric}(x, digits = NULL, ...)

\method{render_f}{default}(
  x,
  drop0leading = FALSE,
  na.strings = "NA",
  na.symbol = "",
  decimal.mark = OutDec(),
  ...
)

rndr_percent(
  x = n/sum(n, na.rm = TRUE) * 100,
  n = NULL,
  digits = get_opt("prozent", "digits"),
  symbol.trailing = get_opt("prozent", "percentage_str"),
  symbol.na = "n.a.",
  style = get_opt("prozent", "style"),
  null_percent_sign = get_opt("prozent", "null_percent_sign"),
  small_values = x < 1/(10^digits)
)
}
\arguments{
\item{x}{numeric; the data to format. Must work with quantile function.}

\item{digits}{the decimal}

\item{drop0leading}{leading zero}

\item{na.strings, na.symbol}{NA replace}

\item{auto.format, pattern_pval, pattern_est, pattern_df, pattern_N}{fix_format: pattern Sonderzeichen mit \\ schreiben!}

\item{drop0leading, format, decimal.mark, ...}{an formatC default format="f"}
}
\value{
character; formatted values as character strings
}
\description{
Given a vector of data return as strings formatted as requested
}
\details{
Stolen from tangram
}
\examples{

# fix_format

df2 <- data.frame(
term = c("A", "B", "C", "D"),
Estimate = c(23.5, .14, 5.6, 2.9876),
df1 = c(3.3, 35., 7.8, 2.1),
df = c(3, 35, 7, 2),
N = c(33, 35, 78, 21),

F.value = c(2.73, 12.444, 14.576, 30.412),
pvalue = c(0.73, 0.044, 0.056, 0.042),   stringsAsFactors =FALSE


)

x1<-fix_format(df2)


 require(car)
mod1 <- lm(conformity ~ fcategory * partner.status, data = Moore)
mod2 <-
  glm(conformity ~ fcategory * partner.status,
      data = Moore,
      family = poisson())

Anova(mod1) \%>\% fix_format()
summary(mod1)$coefficients \%>\% fix_format()
Anova(mod2) \%>\% fix_format()
summary(mod2)$coefficients \%>\% fix_format()


 # Vector
x <- c(1, 0, 2.45896, 2548.256)
y <- c(0.1, 0.01 , 0.001, NA)
z <- c(1L, 2L, 3L)
render_f(x)
render_f(y)
render_f(z)
render_f(as.double(x))
render_f(letters[1:3])

render_f(x, c(1, 2, 3, 4))
render_f(x, c(1, 2, 3))

# Data.Frame
dat <- data.frame(Item = letters[1:4], x = x, y = y)
render_f(dat)
render_f(dat, digits = 2)
render_f(dat, digits = c(1, 2))
render_f(dat, digits = c(1, 2, 3, 4, 1))
render_f(dat,
         digits = list(c(1, 2), c(3)),
         drop0leading = list(FALSE, TRUE))

# Matrix
render_f(cbind(y, x))
render_f(cbind(y, x) , digits = list(3, 0))
# List
mx <- list(x = x, y = y, z = rnorm(10))
render_f(mx)
render_f(mx, digits = 2)
render_f(mx, digits = list(2, 0, 1))
#'
rndr_percent(c(47.458, .154, 0, NA))
# rndr_percent(47.458, 154)
rndr_percent(c(12.148, 0.0266, 2, 0, 36.478, NA),
             c(148, 1, 14, 0, 154, NA),
             digits = 1)
rndr_percent(
  c(12.148, 0.0266, 2, 0, 36.478),
  c(148, 1, 14, 0, 154),
  digits = 1,
  style = 5
)

rndr_percent(data.frame(
  p = c(1, 2, 3),
  p2 = c(10, 0, 36),
  p3 = c(1.1, 2.1, NA)
) ,
data.frame(
  n = c(100, 200, 300),
  n1 = c(1000, 0, 360),
  n2 = c(11, 21, NA)
))



n <- 100
lvs <- c("--", "-", "o", "+", "++")
DF2 <- data.frame(
  Magazines = cut(rnorm(n), 5, lvs),
  Comic.books = cut(rnorm(n), 5, lvs),
  Fiction = cut(rnorm(n), 5, lvs),
  Newspapers = cut(rnorm(n), 5, lvs),
  Geschlecht = cut(rnorm(n), 3, c("m", "f", "d"))
)
x <- with(DF2, table(Magazines, Geschlecht))

cnt <- ftable(x)
prop_table <- prop.table(x)
prop_table[which(is.na(prop_table))] <- 0
prc <-  ftable(prop_table * 100)
rndr_percent(prc, cnt)

x <- with(DF2, table(Magazines, Geschlecht))
prop_table <- prop.table(x)

rndr_percent(prop_table, x)
}
