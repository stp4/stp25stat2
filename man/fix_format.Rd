% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fix_format.R
\name{fix_format}
\alias{fix_format}
\alias{fix_format2}
\title{fix_format}
\usage{
fix_format(x, ...)

fix_format2(x, digits = NULL, include.rownames = TRUE)
}
\arguments{
\item{x}{an R object. data.frame or list}

\item{digits}{integer. if Null stp25stat2:::format_guess()
a positive integer indicating how many significant digits are to be used}

\item{include.rownames}{logical. TRUE}

\item{names_repair}{logical. P-value and SE}

\item{p.value}{character.  pattern for p_values}

\item{se}{character. pattern for Estimate and SE}

\item{df}{character. pattern for degree of fredom}
}
\value{
A tbble data.frame the same length as the input.
}
\description{
Formatieren der Zahlen f√ºr die Ausgabe mit Output()

fix_format():
Alle numeric werden entweder geraten oder mit einer fixen
Nachkomastelle formatiert.

fix_format2(): Erratet die p-Werte und formatiert
}
\examples{

df2 <-
  data.frame(
    term = c("A", "B", "C", "D"),
    Estimate = c(23.5567, .148990, 5.643256, 2.9876),
    df1 = c(3.3, 35., 7.8, 2.1),
    df = c(3, 35, 7, 2),
    N = c(33, 35, 78, 21),
    F.value = c(2.73345, 12.4446, 14.5767, 30.4128),
    pvalue = c(0.73123, 0.044456, 0.056789, 0.042654),
    stringsAsFactors =FALSE
  )

# Erratet die p-Wert
fix_format(df2)

# versucht zu eraten wie viele digits
fix_format2(df2)

# fest vorgegeben
fix_format2(df2, digits = 2)




#  require(car)
# mod1 <- lm(conformity ~ fcategory * partner.status, data = Moore)
# mod2 <-
#   glm(conformity ~ fcategory * partner.status,
#       data = Moore,
#       family = poisson())
#
# Anova(mod1) |> fix_format()
# summary(mod1)$coefficients |> fix_format()
# Anova(mod2) |> fix_format()
# summary(mod2)$coefficients |> fix_format()

}
